  main.cpp
c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(874): error C2664: 'MySTL::allocator<_Newfirst>::allocator(MySTL::allocator<_Newfirst> &&)': cannot convert argument 1 from 'std::_Wrap_alloc<MySTL::allocator<int>>' to 'const MySTL::allocator<_Newfirst> &'
          with
          [
              _Newfirst=std::_Container_proxy
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(874): note: Reason: cannot convert from 'std::_Wrap_alloc<MySTL::allocator<int>>' to 'const MySTL::allocator<_Newfirst>'
          with
          [
              _Newfirst=std::_Container_proxy
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(874): note: No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector(587): note: see reference to function template instantiation 'std::_Wrap_alloc<MySTL::allocator<_Newfirst>>::_Wrap_alloc<std::_Wrap_alloc<MySTL::allocator<int>>>(_Other &) noexcept' being compiled
          with
          [
              _Newfirst=std::_Container_proxy,
              _Other=std::_Wrap_alloc<MySTL::allocator<int>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector(587): note: see reference to function template instantiation 'std::_Wrap_alloc<MySTL::allocator<_Newfirst>>::_Wrap_alloc<std::_Wrap_alloc<MySTL::allocator<int>>>(_Other &) noexcept' being compiled
          with
          [
              _Newfirst=std::_Container_proxy,
              _Other=std::_Wrap_alloc<MySTL::allocator<int>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector(585): note: while compiling class template member function 'void std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Free_proxy(void)'
          with
          [
              _Ty=int,
              _Alloc=MySTL::allocator<int>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector(552): note: see reference to function template instantiation 'void std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>::_Free_proxy(void)' being compiled
          with
          [
              _Ty=int,
              _Alloc=MySTL::allocator<int>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector(679): note: see reference to class template instantiation 'std::_Vector_alloc<std::_Vec_base_types<_Ty,_Alloc>>' being compiled
          with
          [
              _Ty=int,
              _Alloc=MySTL::allocator<int>
          ]
  c:\users\marin\documents\mystl\mystl\mystl\testcase\test_allocator.h(22): note: see reference to class template instantiation 'std::vector<int,MySTL::allocator<int>>' being compiled
  string_impl.cpp
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(647): warning C4267: 'initializing': conversion from 'size_t' to 'char', possible loss of data
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(694): warning C4018: '<': signed/unsigned mismatch
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(714): warning C4018: '<': signed/unsigned mismatch
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(1049): warning C4018: '<': signed/unsigned mismatch
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(1062): warning C4018: '<': signed/unsigned mismatch
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(1092): warning C4018: '<': signed/unsigned mismatch
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(1103): warning C4018: '<': signed/unsigned mismatch
c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory(349): warning C4996: 'std::_Uninitialized_copy0': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory(336): note: see declaration of 'std::_Uninitialized_copy0'
  c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(55): note: see reference to function template instantiation '_FwdIt std::uninitialized_copy<MySTL::string::const_iterator,MySTL::string::iterator>(_InIt,_InIt,_FwdIt)' being compiled
          with
          [
              _FwdIt=MySTL::string::iterator,
              _InIt=MySTL::string::const_iterator
          ]
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(381): warning C4018: '<=': signed/unsigned mismatch
  c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(340): note: see reference to function template instantiation 'MySTL::string &MySTL::string::assign<MySTL::string::const_iterator>(InputIterator,InputIterator)' being compiled
          with
          [
              InputIterator=MySTL::string::const_iterator
          ]
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(384): warning C4018: '<=': signed/unsigned mismatch
c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(511): warning C4018: '>': signed/unsigned mismatch
  c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(419): note: see reference to function template instantiation 'MySTL::string::iterator MySTL::string::insert<MySTL::string::const_iterator>(MySTL::string::iterator,InputIterator,InputIterator)' being compiled
          with
          [
              InputIterator=MySTL::string::const_iterator
          ]
c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(146): error C2440: 'initializing': cannot convert from 'const char *' to 'void *'
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(146): note: Conversion loses qualifiers
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory(263): note: see reference to function template instantiation 'void std::_Construct<_Ty,char&>(_Ty1 *,_Ty2)' being compiled
          with
          [
              _Ty=const char,
              _Ty1=const char,
              _Ty2=char &
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory(289): note: see reference to function template instantiation '_FwdIt std::_Uninitialized_copy0<_Iter,_FwdIt>(_InIt,_InIt,_FwdIt,std::_Nonscalar_ptr_iterator_tag)' being compiled
          with
          [
              _FwdIt=MySTL::string::const_iterator,
              _Iter=MySTL::string::iterator,
              _InIt=MySTL::string::iterator
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory(320): note: see reference to function template instantiation '_FwdIt std::_Uninitialized_copy0<_InIt,_Iter>(_InIt,_InIt,_FwdIt)' being compiled
          with
          [
              _FwdIt=MySTL::string::const_iterator,
              _InIt=MySTL::string::iterator,
              _Iter=MySTL::string::const_iterator
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory(340): note: see reference to function template instantiation '_FwdIt std::_Uninitialized_copy0<_InIt,_FwdIt>(_InIt,_InIt,_FwdIt,std::random_access_iterator_tag,std::random_access_iterator_tag)' being compiled
          with
          [
              _FwdIt=MySTL::string::const_iterator,
              _InIt=MySTL::string::iterator
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory(350): note: see reference to function template instantiation '_FwdIt std::_Uninitialized_copy0<_Iter,_FwdIt>(_InIt,_InIt,_FwdIt,std::false_type)' being compiled
          with
          [
              _FwdIt=MySTL::string::const_iterator,
              _Iter=MySTL::string::iterator,
              _InIt=MySTL::string::iterator
          ]
  c:\users\marin\documents\mystl\mystl\mystl\implementation\string_impl.cpp(547): note: see reference to function template instantiation '_FwdIt std::uninitialized_copy<MySTL::string::iterator,MySTL::string::const_iterator>(_InIt,_InIt,_FwdIt)' being compiled
          with
          [
              _FwdIt=MySTL::string::const_iterator,
              _InIt=MySTL::string::iterator
          ]
  Generating Code...
  Compiling...
  test_vector.cpp
c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory(349): warning C4996: 'std::_Uninitialized_copy0': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory(336): note: see declaration of 'std::_Uninitialized_copy0'
  c:\users\marin\documents\mystl\mystl\mystl\implementation\vector_impl.h(265): note: see reference to function template instantiation '_FwdIt std::uninitialized_copy<int*,T*>(_InIt,_InIt,_FwdIt)' being compiled
          with
          [
              _FwdIt=int *,
              T=int,
              _InIt=int *
          ]
  c:\users\marin\documents\mystl\mystl\mystl\implementation\vector_impl.h(250): note: while compiling class template member function 'void MySTL::vector<int,MySTL::allocator<T>>::resize(MySTL::vector<T,MySTL::allocator<T>>::size_type,int)'
          with
          [
              T=int
          ]
  c:\users\marin\documents\mystl\mystl\mystl\testcase\test_vector.cpp(112): note: see reference to function template instantiation 'void MySTL::vector<int,MySTL::allocator<T>>::resize(MySTL::vector<T,MySTL::allocator<T>>::size_type,int)' being compiled
          with
          [
              T=int
          ]
  c:\users\marin\documents\mystl\mystl\mystl\testcase\test_vector.cpp(22): note: see reference to class template instantiation 'MySTL::vector<int,MySTL::allocator<T>>' being compiled
          with
          [
              T=int
          ]
  Generating Code...
